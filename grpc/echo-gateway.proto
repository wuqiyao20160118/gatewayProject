syntax = "proto3";

package echo;

// add gateway which makes server support http
import "google/api/annotations.proto";

option go_package = ".;proto";

// EchoRequest is the request for echo.
message EchoRequest {
    string message = 1;
}

// EchoResponse is the response for echo.
message EchoResponse {
    string message = 1;
}

// Echo is the echo service.
service Echo {
    // UnaryEcho is unary echo.
    rpc UnaryEcho (EchoRequest) returns (EchoResponse) {
        // use template
        option (google.api.http) = {
            post: "/v1/example/echo"
            body: "*"
        };
    }
    // ServerStreamingEcho is server side streaming.
    rpc ServerStreamingEcho (EchoRequest) returns (stream EchoResponse) {
    }
    // ClientStreamingEcho is client side streaming.
    rpc ClientStreamingEcho (stream EchoRequest) returns (EchoResponse) {
    }
    // BidirectionalStreamingEcho is bidi streaming.
    rpc BidirectionalStreamingEcho (stream EchoRequest) returns (stream EchoResponse) {
    }
}

// protoc --proto_path=../ -I. -I%GOPATH%/src -I%GOPATH%/pkg/mod/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis --go_out=plugins=grpc:proto echo-gateway.proto
// protoc --proto_path=../ -I. -I%GOPATH%/src -I%GOPATH%/pkg/mod/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis --grpc-gateway_out=logtostderr=true:proto echo-gateway.proto

